# Please look at README.md then go to section "what are the problems?" to understand the issue here. 

#Imoprt the participant csv file named "001demo_visual_demo1_2019_May_31_1409" change the name to p1


 # install.packages(data.table) to create date set


# subseting the data to based on the modality; visual & auditory

p1_visual <- p1[p1$Opening_text=="For these trials attend to Visual", ]
p1_auditory <- p1[p1$Opening_text=="For these trials attend to Auditory", ]

# creating a victor for the visual variables
blank_V <- c('stim_ending_t','visbility','soundvolume','key_resp_2.rt')

# create data frame for only visual variables
analysis_v <- p1_visual[blank_V]

# creating a victor for the auditory varibles
blank_A <- c('stim_ending_t','visbility','soundvolume','key_resp_2.rt')

# create data frame for only auditory variables
analysis_A <- p1_auditory[blank_A]


 # note for calculating the coefficient of variation symbols: CV = (SD/xbar) * 100.

# calcutating the mean of each condition
# needed library(dplyr)
# needed library(tidyr)

analysis_A <- data.frame(stim_ending_t = sample(seq(1, 3.5, 0.5), 180, replace = TRUE),
           visbility = sample(0:1, 180, replace = TRUE),
           soundvolume = sample(0:1, 180, replace = TRUE),
           key_resp_2.rt = runif(180, 1, 5)) -> analysis_A

analysis_A %>%
  group_by(stim_ending_t, visbility, soundvolume) %>%
  summarize(m = mean(key_resp_2.rt)) %>%
  ungroup() %>%
  filter(!(visbility == 1 & soundvolume == 1)) %>%
  mutate(key = case_when(visbility == 0 & soundvolume == 0 ~ "blank",
                         visbility == 0 & soundvolume == 1 ~ "only_sound",
                         visbility == 1 & soundvolume == 0 ~ "only_images")) %>%
  select(-visbility, -soundvolume) %>%
  spread(key, m)

## I try this code but still getting different result each time I re-run the code !!! 

analysis_A <- data.frame(stim_ending_t = rep(seq(1, 3.5, 0.5), each = 30), 
           visbility = rep(c(1, 0, 0), 60), 
           soundvolume = rep(c(0, 1, 0), 60), 
           key_resp_2.rt = runif(180, 1, 5))

analysis_A %>% 
  group_by(stim_ending_t, visbility, soundvolume) %>% 
  summarize(average = mean(key_resp_2.rt)) %>% 
  ungroup() %>% 
  mutate(key = case_when(visbility == 0 & soundvolume == 0 ~ "blank", 
                         visbility == 0 & soundvolume == 1 ~ "only_sound", 
                         visbility == 1 & soundvolume == 0 ~ "only_images")) %>% 
  select(-visbility, -soundvolume) %>% 
  spread(key, average)
